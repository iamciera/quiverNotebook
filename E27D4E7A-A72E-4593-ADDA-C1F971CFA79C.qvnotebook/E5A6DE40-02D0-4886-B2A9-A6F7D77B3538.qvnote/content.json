{
  "title": "analysis 5",
  "cells": [
    {
      "type": "markdown",
      "data": "**About**:  This analysis is for Paul.  He wanted a few regions from all the species. I am basically just running through the pipeline described in previous analysis.\n\nMake the kvon bed file lazily in excel from orignal file `Dmel.original`\n\nRun command in directory with chain files\n\n    for filename in *chain; do ~/genomicsTools/liftOver/liftOver -minMatch=0.1 -multiple ../../pipeline_output_5/1.Dmel.bed $filename ../../pipeline_output_5/2.liftOver/output.$filename.bed ../../pipeline_output_5/2.liftOver/unlifted.$filename.bed; done\n\nIn order to check the number of lifted in each use `wc -l *bed`\n\n- Add species name to the file. I will do this in shell. \n\n  `for file in output*; do awk 'BEGIN{OFS=\"\\t\"}{print $0, FILENAME}' $file > fixed.$file; done`\n  \n- concatenate into one file for each file type: `cat fixed.output.Dmel_to_MEMB00* > 2a.liftover_output_ALL.bed`. To check `wc -l *ALL.bed`\n\n- clean up bedfile name.  `2.cleanLiftOverOutputBedfile.R` In R. Make sure you change the file \n\n- Run fastaFromBED indirectory with assemblies\n\n    `for filename in *.fa; do ~/genomicsTools/bedtools2/bin/fastaFromBed -fi $filename -bed ../../pipeline_output_5/2.liftOver/2b.outputForFastaFromBED.bed -fo ../../pipeline_output_5/3.fasta_creation/fastaFromBED_output_$filename -name; done`\n    \nAnd for dmel: THIS DOES NOT WORK!? WHY??\n\n    '~/genomicsTools/bedtools2/bin/fastaFromBed -fi ../../montium_data/assemblies/dm6.fa -bed ../1.Dmel.bed -fo fastaFromBED_dm6.fa`\n\n- Then concatenate:`cat fastaFromBED_output_MEMB00* > 3.fastaFromBED_ALL.fa`\n    to check: `grep -c \"^>\" 3a.fastaFromBed_ALL.fa`\n    to check in full directory: `grep -rc \"^>\" *`\n\n\n**Subset fasta file by presence of + or - in header**\n\nfor plus \n\n`cat 3.fastaFromBED_ALL.fa | bioawk -cfastx ' $name ~ /'\\\\+'/ { print \">\" $name \"\\n\" $seq }' >> plus.fa`\n\nfor minus \n\n`cat 3.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /\\|\\-/ { print \">\" $name \"\\n\" $seq }' >> minus.fa`\n\nReverse Complement\n\n  `~/genomicsTools/seqtk/seqtk seq -r minus.fa > reversed_minus.fa`\n\nconcatenate\n\n`cat reversed_minus.fa plus.fa > 3b.fastaFromBED_ALL.fa`\n\n- Now I need to be able to filter all enhancers of a particular type into their own file. \n\nStep 10A: Gets list of unique enhancerNames\n\n`cat 3.fastaFromBed_ALL.fa | bioawk -c fastx ' $name  { print $name }' | grep -o '^[^|]*' | sed '/^\\s*$/d' | sort | uniq > enhancerNames`\n\nStep 10B: Extract enhancer sequences based on enhancer names\n\n`while read line; do cat 3b.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /'$line'/ { print \">\" $name \"\\n\" $seq }' >> ../4.enhancer_alignment/$line.fa; done < enhancerNames`\n\n\n\n\n*TODO*\n\nChange all the names in the directory.  Change them to the species name.\n\nMEMB003E\tDrosophila aurora\nMEMB002B\tDrosophila triauraria \nMEMB003C\tDrosophila asahinai \nMEMB002A\tDrosophila rufa\nMEMB002C\tDrosophila lacteicornis \n\nMEMB003D\tDrosophila bocki \nMEMB003A\tDrosophila leontia\n\nMEMB002D\tDrosophila bunnanda \nMEMB002E\tDrosophila serrata \nMEMB003B\tDrosophila birch \n\nMEMB003F\tDrosophila jambulina \nMEMB002F\tDrosophila pectinifera \n\n\n    sed -i '' 's/MEMB003E/D.aurora/g' *.fa \n    sed -i '' 's/MEMB002B/D.triauraria/g' *.fa\n    sed -i '' 's/MEMB003C/D.asahinai/g' *.fa\n    sed -i '' 's/MEMB002A/D.rufa/g' *.fa\n    sed -i '' 's/MEMB002C/D.lacteicornis/g' *.fa\n    sed -i '' 's/MEMB003D/D.bocki/g' *.fa\n    sed -i '' 's/MEMB003A/D.leontia/g' *.fa\n    sed -i '' 's/MEMB002D/D.bunnanda/g' *.fa\n    sed -i '' 's/MEMB002E/D.serrata/g' *.fa\n    sed -i '' 's/MEMB003B/D.birch/g' *.fa\n    sed -i '' 's/MEMB003F/D.jambulina/g' *.fa\n    sed -i '' 's/MEMB002F/D.pectinifera/g' *.fa\n    \nCheck the length of the original mel sequences and compare.\n\n# Muscle to check the size\n\nRun default settings on all files\n\n    for filename in *.fa; do ~/genomicsTools/muscle -in $filename -out ../5.output_alignment/output_$filename;\n    done"
    }
  ]
}