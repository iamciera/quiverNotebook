{
  "title": "Analysis 4",
  "cells": [
    {
      "type": "markdown",
      "data": "**About**: This analysis will be run on the server to retrieve all the \"enhancers\" from all kvon data.\n\nMake the kvon bed file using `1.kvonDataToBED_full.R` resulting in the file `1.kvon_redfly_BED4_full_17May2016.bed`\n\nliftOver, run command in directory with chain files\n\n    for filename in *chain; do ~/genomicsTools/liftOver/liftOver -minMatch=0.1 -multiple ../../pipeline_output_4/1.kvon_redfly_BED4_full_17May2016.bed $filename ../../pipeline_output_4/2.liftOver/output.$filename.bed ../../pipeline_output_4a/2.liftOver/unlifted.$filename.bed; done\n\nIn order to check the number of lifted in each use `wc -l *bed`\n\nOn mac:\n\n    for file in output*; do awk 'BEGIN{OFS=\"\\t\"}{print $0, FILENAME}' $file > fixed.$file; done`\n\nWhich appends the file name to a new column in every output file. You can do the same with output to unlifted replace `output*` with `*unlifted*`.  In the mac version you write a new file, you cannot seem to write over file. \n\n- concatenate into one file for each file type: `cat fixed.output.Dmel_to_MEMB00* > 2a.liftover_output_ALL.bed`. To check `wc -l *ALL.bed`\n\n- clean up bedfile name.  `2.cleanLiftOverOutputBedfile.R` In R.  Make sure you change which filename is cleaned and the output in source file. The output is `2b.outputForFastaFromBED.bed`\n\n- Run fastaFromBED indirectory with assemblies\n\n    `for filename in *.fa; do ~/genomicsTools/bedtools2/bin/fastaFromBed -fi $filename -bed ../../pipeline_output_4/2.liftOver/2b.outputForFastaFromBED.bed -fo ../../pipeline_output_4/3.fasta_creation/fastaFromBED_output_$filename -name; done`\n    \n- Then concatenate:`cat fastaFromBED_output_MEMB00* > 3a.fastaFromBED_ALL.fa`\n    to check: `grep -c \"^>\" 3a.fastaFromBed_ALL.fa`\n    to check in full directory: `grep -rc \"^>\" *`\n\n\n**Subset fasta file by presence of + or - in header**\n\nfor plus \n\n`cat 3a.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /'\\\\+'/ { print \">\" $name \"\\n\" $seq }' >> plus.fa`\n\nfor minus \n\n`cat 3a.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /\\|\\-/ { print \">\" $name \"\\n\" $seq }' >> minus.fa`\n\nReverse Complement\n\n  `~/genomicsTools/seqtk/seqtk seq -r minus.fa > reversed_minus.fa`\n\nconcatenate\n\n`cat reversed_minus.fa plus.fa > 3b.fastaFromBED_ALL.fa`\n\n**Filter all enhancers of a particular type into their own file**\n\nGets list of unique enhancerNames\n\n  `cat 3b.fastaFromBed_ALL.fa | bioawk -c fastx ' $name  { print $name }' | grep -o '^[^|]*' | sed '/^\\s*$/d' | sort | uniq > enhancerNames`\n\nExtract enhancer sequences based on enhancer names\n\n`while read line; do cat 3b.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /'$line'/ { print \">\" $name \"\\n\" $seq }' >> ../4.enhancer_alignment/$line.fa; done < enhancerNames`\n\n**Alternative Step: With D. mel**\n\nWith Drosophila - First follow the directions in Analysis 1b_D.mel\n\n`while read line; do cat 3b.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /'$line'/ { print \">\" $name \"\\n\" $seq }' >> ../4b.enhancer_alignment_withDmel/$line.fa; done < enhancerNames`\n\n\n**Sequence Analysis Check**\n\nI have all the filenames, now I want to get some information on length \n\n`for filename in *.fa; do\nbioawk -c fastx '{ print $name, length($seq) }' < $filename >> test.txt;\ndone`\n\n\n**Filtering Sequences that have all species present**\n\nNow I have want to filter and keep only the sequences that have all species present in file. These directions are if you are including D. mel which would make nine species.  Change if you have another number speceis.\n\nFirst I create a file with the file names that contain ten sequences. \nNote: There are really several files that have over 100 sequences it seems.   \n`grep -e \":10$\" < seqTotals.txt > 1.files_with_10_seq.txt`\n\nRemove the count number in the file\n`sed -e 's/':10$'//g' 1.files_with_10_seq.txt > 2.files_with_10_seq.txt`\n\nThen use `2.files_with_10_seq.txt` as guide for isolate files.  \nNote: You should really use move in the future though.\n\n`while read line; do \ncp $line ./only10; done < 2.files_with_10_seq.txt` \n\nNote: This happens, not sure why\n\n> cp $line ./only10; done < 2.files_with_10_seq.txt\ncp: VT2012.fa4: No such file or directory\ncp: VT2461.fa2: No such file or directory\ncp: VT2593.fa5: No such file or directory\ncp: VT2594.fa5: No such file or directory\ncp: VT3881.fa1: No such file or directory\ncp: VT3887.fa7: No such file or directory\n\nTo roughly check and see how the species are represented in these files:\n\nFirst count the number of files in the directory. \n`ls -1 | wc -l` = 3494\n\nNow check to see how many times a species is represented in the directory.  Should be 3494.\n\nThis asks how many times the species is found in the directory\n`grep -ir MEMB002A . | wc -l`  3496\n`grep -ir MEMB002C . | wc -l`  3491\n`grep -ir MEMB003C . | wc -l`  3494\n`grep -ir MEMB002F . | wc -l`  3491\n`grep -ir MEMB003D . | wc -l`  3497\n`grep -ir MEMB002D . | wc -l`  3496\n`grep -ir MEMB002E . | wc -l`  3492\n`grep -ir MEMB003B . | wc -l`  3492\n`grep -ir MEMB002F . | wc -l`\n`grep -ir dmel . | wc -l`      3494\n\nYou can also say remove all files that don't contain a species. Then only files that have a represenative of each species should remain.\n\nlist='MEMB002A MEMB002C MEMB003C MEMB002F MEMB003D MEMB002D MEMB002E MEMB003B MEMB002F'\nfor word in $list; do\n    grep -L $word *.fa | xargs rm;\ndone\n\nNow \n`ls -1 | wc -l` 3483\n\nSo we lost 11 sequences. Now we have to do an alignment of each sequence seperatley.\n\n## Alignment\n\nFirst do the alignment, this will take awhile\n\n`for filename in *.fa; do ~/genomicsTools/muscle -in $filename -out ./output_$filename;     done`\n\n### Prepare for simple phylogenetic analysis using many sequences\n\nThen concatenate all the alinment files:\n\n`cat output_VT00* >> allFastaAlignment.fa`\n\nNow make sure that all that is left is the species name:\n\nTo remove + and -\n\n`sed -i '' 's/|+//g' allFastaAlignment.fa`\n`sed -i '' 's/|-//g' allFastaAlignment.fa`\n\nremove everything but the species name\n\n`sed -i '' 's/VT.*\\|//g' allFastaAlignment.fa`\n\n**Get a list**\n\nMake a file with all the species names in a list called speciesNames.\n\nThen put all the species files in a seperate file\n\n`while read line; do cat allFastaAlignment.fa | bioawk -cfastx ' $name ~ /'$line'/ { print \">\" $name \"\\n\" $seq }' >> ./species/$line.fa; done < speciesNames`\n\nNow remove the fasta id lines. \n\n`sed -i '' 's/>.*//g' *.fa`\n\nremove the blank line\n\n`for filename in *.fa; do\nsed 's/^ *//; s/ *$//; /^$/d' $filename >> ./output_$filename;\ndone`\n\nAdd identifier to top of file\n\n`for filename in output*.fa; do\necho -e \">$filename\\n$(cat $filename)\" > $filename;\ndone`\n\ncat output_* >> 7b.fullSpeciesAlignment.fa\n\nThen proceed to running RAXML on CIPRES server. \n\n\n"
    }
  ]
}