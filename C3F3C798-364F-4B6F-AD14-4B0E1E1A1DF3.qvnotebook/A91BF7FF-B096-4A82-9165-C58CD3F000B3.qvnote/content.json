{
  "title": "Dalliance Genome Browser",
  "cells": [
    {
      "type": "markdown",
      "data": "[http://www.biodalliance.org/](http://www.biodalliance.org/).\n\n*When you write the tutorial make sure you give examples to all the files you are using. The formatting of these files is super annoying. \n\n## Installing dalliance\n\n**Step 1** First install [node-v4.3.2.pkg](https://nodejs.org/en/).\nStep 2. Follow instructions [here](https://github.com/dasmoth/dalliance). \n\n      sudo npm install -g gulp`\n      npm install # Install dependencies\n      gulp        # Build Dalliance\n      \n**Step 3** Downloaded the entire dalliance-master branch from Github: [https://github.com/dasmoth/dalliance](https://github.com/dasmoth/dalliance), uzipped, and placed in ~/git.repos.\n**Step 4**s Run `npm install` in `dalliance` directory\n**Step 5** Run `gulp` in `dalliance` directory\n**Step 6** Test by opening any `.html` file in the `example-brower` directory. You should see a working browser.\n\n## Get Genome file\n\nLooks like I have to add the genome as a `.2bit` option. \n\nI used FTP to download `.2bit` dm6 file: \n\n    ftp ftp://hgdownload.cse.ucsc.edu/goldenPath/dm6/bigZips/\n    get dm6.2bit\n\n### Serving locally\n\nIn order to do on the fly testing and visualization I wanted to have a the browser to be working locally on my laptop. While not exactly the most experianced web programmer, I can usually navigate around html and javascript, but found it rather difficult to set-up a local dalliance enviroment. Here are my notes on that. \n\n**Step 1** Make an html file that will house your browser\n\nMy html file was as stripped down as possible.  I made it by first trying to see if I could get the nucleotide sequence of the genome track working. **Which lines did I change? from where?**\n\n**Step 2**\n\nIn order to have the browser read in the `.2bit` data you have to have the files served either locally or remotely. There are many ways to do this, but under the suggestion of one of bioalliances maintainers, I used [node-static](http://www.kevinleary.net/simple-node-static-server/). Using a this [stackoverflow answer](http://stackoverflow.com/a/8427954) as a guide, I installed and served the data easily. You run the `node server.js` command in any directory that houses your data to start serving the files. You should see `Server running on 8080..` In order to view the browser enter `http://localhost:8080/example-browsers/dm6.html` into your browser. I was using Chrome.\n\nMake sure that wherever you run the `node server.js` command, you specify correctly where your data is in your `dm6.html` file. \n\n      twoBitURI:  'data/dm6.2bit',\n\n -  You will not see the nucleotide sequence by directly opening the dm6.html file. You have to enter the browser address into the address bar. \n\n\n## Add Tracks\n\nTracks will need to be in [bigBed format](https://genome.ucsc.edu/goldenpath/help/bigBed.html). \n\n\n### Serving on Amazon S3\n\nIf you want to serve your browser locally Amazon S3 is a good option.  The biggest hurdle is setting up [CORS](http://enable-cors.org/server.html) properly. Biodalliance explains it a bit more [here](http://www.biodalliance.org/cors.html), but all you need to understand is CORs allows files to be accessed off the server and specifies the privalleges. You should be as specific as possible for security purposes. \n\nTo get working on Amazon S3, I put the files on the server. In the properties section of the bucket, you specify that you would like \"static website hosting\", \"enable static hosting\" and enter which file you want to be displayed in the \"index document line\" and press save. In the static website information there is a line \"**endpoint**\": [yourbucketname.website.ect.amazonaws.com]().  Copy this address, this is where your genome will be served and you need it to configure you CORS document. \n\nIn \"permissions\" click \"edit CORS configuration\" and copy below:\n\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<CORSConfiguration xmlns=\"http://s3.amazonaws.com/doc/2006-03-01/\">\n    <CORSRule>\n        <AllowedOrigin>http://dm6genome.s3-website-us-west-1.amazonaws.com</AllowedOrigin>\n        <AllowedMethod>GET</AllowedMethod>\n        <MaxAgeSeconds>3000</MaxAgeSeconds>\n        <AllowedHeader>Range</AllowedHeader>\n    </CORSRule>\n</CORSConfiguration>\n\nIn place of [http://s3.amazonaws.com/doc/2006-03-01/]() (which was my address), paste in your **endpoint** address from the static website section. \n\n## References\n\n### CORs resources\n\n1. [http://blog.errorception.com/2014/11/enabling-cors-on-amazon-cloudfront-with.html](http://blog.errorception.com/2014/11/enabling-cors-on-amazon-cloudfront-with.html)\n2. [http://www.html5rocks.com/en/tutorials/cors/](http://www.html5rocks.com/en/tutorials/cors/)\n\n\n### Trouble Shooting \n\nI asked a [question](https://groups.google.com/forum/?hl=en#!topic/biodalliance-dev/xuo5q10c0k0) in the Dalliance google groups and recieved a few suggestions:\n\n1. I am using an old version of Dalliance. Newest version; [http://www.biodalliance.org/release-0.13/dalliance-compiled.js](http://www.biodalliance.org/release-0.13/dalliance-compiled.js)\n\n\n### Serving\n\nNice article on serving locally: [Why You Need a Local Testing Server (and How To Do It)](http://www.dwuser.com/education/content/why-you-need-a-testing-server-and-how-to-do-it/)\n\nHelpful documentation on how to run things locally: [https://github.com/mrdoob/three.js/wiki/How-to-run-things-locally](https://github.com/mrdoob/three.js/wiki/How-to-run-things-locally)\n\n\n  \n#### Resources for adding genome\n\nThis tutorial seems helpful (but only for adding tracks): [http://bpbio.blogspot.com/2011/04/adding-bedwig-data-to-dalliance-genome.html](http://bpbio.blogspot.com/2011/04/adding-bedwig-data-to-dalliance-genome.html)\n\nQuestion on adding custom genome: [From Google Group](https://groups.google.com/forum/#!searchin/biodalliance-dev/genome/biodalliance-dev/hdhWoNFL5s0/UEHlHlk50S4J)\n\nSetting up an [Assembly Hub](http://genomewiki.ucsc.edu/index.php/Assembly_Hubs)\nAnother question about adding custom genome: [From Google Group](https://groups.google.com/forum/#!searchin/biodalliance-dev/genome/biodalliance-dev/WaY98nIpwdM/Cub38vgYwToJ)\n\n\n\n\n### Setting Up New One\n\n\nA tutorial was found here: [http://www.biodalliance.org/people/thomas/dalliance-for-das-workshop.pdf](http://www.biodalliance.org/people/thomas/dalliance-for-das-workshop.pdf).\n\nPaper for dalliance here: [http://bioinformatics.oxfordjournals.org/content/27/6/889.full.pdf+html](http://bioinformatics.oxfordjournals.org/content/27/6/889.full.pdf+html)\n\nJulin's notes for setting up Brassica genome: [https://github.com/jnmaloof/debian-lab-server/blob/master/dalliance_configuration.md](https://github.com/jnmaloof/debian-lab-server/blob/master/dalliance_configuration.md)\n\nYet another tutorial, set up in 15 min: [http://blog.biobirdman.com/2015/06/title2.html](http://blog.biobirdman.com/2015/06/title2.html)\n"
    }
  ]
}