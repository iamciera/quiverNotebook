{
  "title": "otherSpecies_pipeline_1 - Getting it to work with ES2",
  "cells": [
    {
      "type": "markdown",
      "data": "## Begining Steps\n\nI downloaded all the chain files from the FTP server,  unzipped them, and put them in their own folder.\n\nTo get the genome fasta file, I download the 2bitToFa file and made exectuable in my Genomic tools folder.\n\nTo use 2bitToFa:\n\nSequence can be extracted from the .2bit file with the \nexample:\n\n`~/genomicsTools/twoBitToFa ~/Desktop/droPer1.2bit stdout > droPer1.fa`\n\n## Start\n\nFirst you lift the dm6 to dm3, so you can compare with all the species. \n\n`~/genomicsTools/liftOver/liftOver -minMatch=0.1 -multiple ../../otherSpecies_pipeline_1/1a.eveRegions_forMS2.bed dm6ToDm3.over.chain ../../otherSpecies_pipeline_1/1b.dm6ToDm3_output.chain.bed ../../otherSpecies_pipeline_1/1b.unlifted.dm6ToDm3.bed`\n\n\nIn chain file:\n\n`for filename in *chain; do ~/genomicsTools/liftOver/liftOver -minMatch=0.1 -multiple ../../otherSpecies_pipeline_1/1b.dm6ToDm3_output.chain.bed $filename ../../otherSpecies_pipeline_1/2.liftOver/output.$filename.bed ../../otherSpecies_pipeline_1/2.liftOver/unlifted.$filename.bed; done`\n\nIn order to check the number of lifted in each use `wc -l *bed`\n\nOn mac:\n\n    for file in *; do awk 'BEGIN{OFS=\"\\t\"}{print $0, FILENAME}' $file > fixed.$file; done\n\nWhich appends the file name to a new column in every output file. You can do the same with output to unlifted replace `output*` with `*unlifted*`.  In the mac version you write a new file, you cannot seem to write over file. \n\n- concatenate into one file for each file type: `cat fixed* > 2a.liftover_output_ALL.bed`. To check `wc -l *ALL.bed`\n\n  - clean up bedfile name.  `2.cleanLiftOverOutputBedfile.otherspecies.R` In R.  Make sure you change which filename is cleaned and the output in source file. The output is `2b.outputForFastaFromBED.bed`\n\n- Run fastaFromBED indirectory with assemblies\n\n    `for filename in *.fa; do ~/genomicsTools/bedtools2/bin/fastaFromBed -fi $filename -bed ../../otherSpecies_pipeline_1/2.liftOver/2b.outputForFastaFromBED.bed -fo ../../otherSpecies_pipeline_1/3.fasta_creation/fastaFromBED_output_$filename -name; done`\n    \n- Then concatenate:`cat fastaFromBED_output_* > 3a.fastaFromBED_ALL.fa`\n    to check: `grep -c \"^>\" 3a.fastaFromBed_ALL.fa`\n      to check in full directory: `grep -rc \"^>\" *`\n\n\n**Subset fasta file by presence of + or - in header**\n\nfor plus \n\n  `cat 3a.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /'\\\\+'/ { print \">\" $name \"\\n\" $seq }' >> plus.fa`\n\nfor minus \n\n`cat 3a.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /\\|\\-/ { print \">\" $name \"\\n\" $seq }' >> minus.fa`\n\nReverse Complement\n\n  `~/genomicsTools/seqtk/seqtk seq -r minus.fa > reversed_minus.fa`\n\nconcatenate\n\n`cat reversed_minus.fa plus.fa > 3b.fastaFromBED_ALL.fa`\n\n**Filter all enhancers of a particular type into their own file**\n\nGets list of unique enhancerNames\n\n  `cat 3b.fastaFromBed_ALL.fa | bioawk -c fastx ' $name  { print $name }' | grep -o '^[^|]*' | sed '/^\\s*$/d' | sort | uniq > enhancerNames`\n\nExtract enhancer sequences based on enhancer names\n\n`while read line; do cat 3b.fastaFromBed_ALL.fa | bioawk -cfastx ' $name ~ /'$line'/ { print \">\" $name \"\\n\" $seq }' >> ../4.enhancer_alignment/$line.fa; done < enhancerNames`\n\n**Align**\n\nfor filename in *.fa; do ~/genomicsTools/muscle -in $filename -out ../5.alingments/output_$filename;     done"
    }
  ]
}